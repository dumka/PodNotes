{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PodNotes","text":"<p>The one goal for PodNotes is to make it easier to write notes on podcasts.</p> <p>Here are the features that will help you do that \ud83d\udc47.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Mobile friendly</li> <li>Podcast player built into Obsidian</li> <li>Add any publicly available podcast through search, or custom feeds by URL</li> <li>Track played episodes &amp; playback progress</li> <li>Create podcast notes from templates with metadata about episodes</li> <li>Capture timestamps &amp; link directly to the time in the episode</li> <li>Download episodes for offline playback</li> <li>Support for non-podcast local audio files</li> <li>API that can be used by plugins like QuickAdd or Templater for custom workflows</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>This plugin is in the Obsidian community plugin store. You can find it by searching in the store, or by clicking here.</p>"},{"location":"#installation-with-brat","title":"Installation with BRAT","text":"<p>BRAT is an Obsidian plugin that helps you test beta plugins and themes. Click here to install it in Obsidian.</p> <p>Add <code>chhoumann/PodNotes</code> to BRAT with the <code>Add a beta plugin for testing</code> command.</p> <p>Now follow the appropriate instructions, which most likely will have you go and enable the plugin once it has finished installing.</p>"},{"location":"#manual-installation","title":"Manual installation","text":"<p>Go to the releases page. Download <code>main.js</code> and <code>manifest.json</code>. Create a new directory in your Obsidian vaults <code>.obsidian/plugins/</code> folder called <code>podnotes</code> and place the downloaded files there.</p> <p>Now refresh the plugins in Obsidian and enable PodNotes.</p>"},{"location":"#screenshots","title":"Screenshots","text":""},{"location":"#demo","title":"Demo","text":""},{"location":"#podcast-grid","title":"Podcast Grid","text":""},{"location":"#episode-list","title":"Episode List","text":""},{"location":"#player","title":"Player","text":""},{"location":"#podcast-note-editing","title":"Podcast Note Editing","text":""},{"location":"#podcast-search","title":"Podcast search","text":""},{"location":"QuickAdd/","title":"QuickAdd","text":"<p>I have made some QuickAdd macros &amp; actions that might be helpful to others.</p> <p>Both of these are seen in the demo: </p>"},{"location":"QuickAdd/#timestamp-capture","title":"Timestamp capture","text":"<p>This is how I capture timestamps so fast in the demo. You can make a Capture action like so: </p> <p>The capture format is as follows:</p> <pre><code>\\n- **```js quickadd\nconst pn = this.app.plugins.plugins.podnotes.api;\nreturn pn.getPodcastTimeFormatted(\"HH:mm:ss\", true);\n```** | \n</code></pre> <p>This captures a new line with the current time, linked to the current podcast, in the active file.</p>"},{"location":"QuickAdd/#add-podcast-note","title":"Add podcast note","text":"<p>This is how I add podcast notes with QuickAdd. First, you will need my template.</p> <pre><code>---\ntags: in/podcast state/process\naliases:\n  - \"{{VALUE:title}}\"\ncssclass: null\nimage: {{VALUE:artworkUrl}}\n---\n\n# {{VALUE:title}}\n### Metadata\nType:: [[%]]\nTags:: \nPodcast:: [[{{VALUE:podcastName}}]]\nTitle:: {{VALUE:title}}\nURL:: {{VALUE:url}}\nGuest:: \nReference:: \nReviewed Date:: ==UPDATE THIS==\n\n### Description\n&gt; {{VALUE:description}}\n\n---\n## Notes\n\n</code></pre> <p>Now, you should make a macro with the following script:</p> <pre><code>module.exports = {\n    entry: (params, settings) =&gt; {\n        const pn = params.app.plugins.plugins.podnotes.api;\n        const podcast = pn.podcast;\n\n        if (!podcast) {\n            new Notice(\"No podcast loaded.\", 5000);\n            throw new Error();\n        }\n\n        params.variables = {\n            ...podcast,\n            ...params.variables,\n            safeTitle: replaceIllegalFileNameCharactersInString(podcast.title),\n        };\n    },\n    settings: {\n        name: 'Podcast Script',\n        author: 'Christian',\n        options: {\n\n        }\n    }\n}\n\nfunction replaceIllegalFileNameCharactersInString(string) {\n    return string\n        .replace(/[\\\\,#%&amp;\\{\\}\\/*&lt;&gt;$\\'\\\":@\\u2023\\|\\?]*/g, '') // Replace illegal file name characters with empty string\n        .replace(/\\n/, ' ') // replace newlines with spaces\n        .replace('  ', ' '); // replace multiple spaces with single space to make sure we don't have double spaces in the file name\n}\n</code></pre> <p>First, create a new macro in the macro panel. This is accessed by clicking <code>Manage Macros</code>. Add a macro with any name you like.</p> <p>Now, add the script as the first step and the template as the second step. Adding these requires that the script and template is saved as files in your Obsidian vault. Their file names are up to you, but ensure that they end in .js and .md, for the script and template respectively.</p> <p>Once you have created the macro in the macro panel, you should add a macro action to the QuickAdd menu. This is done from the main QuickAdd settings. You should see an input field where you can input the name of the macro choice. Right next to it is a dropdown menu with the type of choice you'd like to add\u2014select macro here. Then click <code>Add Choice</code>.</p> <p>Once the choice has been added, you should see the macro in the QuickAdd menu in the settings panel. Click the cogwheel next to the macro choice to edit the macro. You'll want to select the appropriate macro that you created in the macros panel. Notably, we distinguish between a macro and a macro choice. Selecting a macro in the menu that pops up 'links' it to the macro choice, so the macro choice can execute the macro.</p> <p>My settings for the Template action/step in the macro are as follows: </p> <p>Which means that it creates a file with the podcast episode title as the file name in the <code>inputs/podcasts</code> folder, and then opens the file after.</p> <p>Ultimately, activating the macro will lead to notes like this one. </p> <p>If you want more information / guidance on how to use QuickAdd, you can check out the QuickAdd documentation. You can also check out the video I made to help you get started with QuickAdd. There are also similar use cases to this one, which all have similar instructions for installation. These may help:</p> <ul> <li>How I Import Literature Notes into Obsidian</li> <li>Macro: Zettelizer - easily create new notes from headings while keeping the contents in the file</li> <li>Macro: Toggl Manager - set preset Toggl Track time entries and start them from Obsidian</li> <li>Macro: Fetching movies and TV shows into your vault</li> </ul>"},{"location":"api/","title":"API","text":"<pre><code>export interface IAPI {\n    readonly podcast: Episode;\n    readonly isPlaying: boolean;\n    readonly length: number;\n    currentTime: number;\n\n    getPodcastTimeFormatted(format: string, linkify?: boolean): string;\n    start(): void;\n    stop(): void;\n}\n</code></pre> <p>The above functions are all accessible through <code>app.plugins.plugins.podnotes.api</code>.</p>"},{"location":"api/#podcast","title":"<code>podcast</code>","text":"<p>This returns the currently playing episode.</p> <pre><code>export interface Episode {\n    title: string,\n    streamUrl: string\n    url: string,\n    description: string,\n    content: string,\n    podcastName: string,\n    feedUrl?: string,\n    artworkUrl?: string;\n    episodeDate?: Date;\n}\n</code></pre>"},{"location":"api/#getpodcasttimeformattedformat-string-linkify-boolean","title":"<code>getPodcastTimeFormatted(format: string, linkify?: boolean)</code>","text":"<p>This function will return the current playback time formatted according to the given (moment) format. If <code>linkify</code> is true, the time will be linked to the current episode at the given time. This is used by PodNotes to play from the recorded time.</p>"},{"location":"commands/","title":"Commands","text":""},{"location":"commands/#show-podnotes","title":"Show PodNotes","text":"<p>This command is only accessible if there doesn't exist a pane with PodNotes already.</p> <p>Activating it will spawn a new pane with PodNotes in the right sidebar.</p> <p>If you are having issues with PodNotes not being shown, feel free to create an issue. However, do make sure to check that the icon isn't just out of view by scrolling on the right sidebar.</p>"},{"location":"commands/#play-podcast","title":"Play Podcast","text":"<p>This will start playback if the current episode is paused.</p>"},{"location":"commands/#stop-podcast","title":"Stop Podcast","text":"<p>This will stop playback if the current episode is playing.</p>"},{"location":"commands/#toggle-playback","title":"Toggle playback","text":"<p>This will toggle playback between playing and paused.</p>"},{"location":"commands/#skip-backward","title":"Skip Backward","text":"<p>This will skip the current episode back by the amount of seconds specified in the settings.</p>"},{"location":"commands/#skip-forward","title":"Skip Forward","text":"<p>This will skip the current episode forward by the amount of seconds specified in the settings.</p>"},{"location":"commands/#download-playing-episode","title":"Download Playing Episode","text":"<p>This will download the currently playing episode.</p> <p>Downloads are stored in the location specified in settings.</p>"},{"location":"commands/#reload-podnotes","title":"Reload Podnotes","text":"<p>This will reload PodNotes.</p>"},{"location":"commands/#capture-timestamp","title":"Capture Timestamp","text":"<p>This will capture the current timestamp of the currently playing episode.</p> <p>See timestamps for more information on timestamp templates.</p>"},{"location":"commands/#create-podcast-note","title":"Create Podcast Note","text":"<p>This will create a note for the currently playing episode.</p> <p>See templates for more information on note templates.</p>"},{"location":"commands/#copy-universal-episode-link-to-clipboard","title":"Copy universal episode link to clipboard","text":"<p>This will copy the universal episode link to the clipboard.</p> <p>First, it checks for the episode on iTunes to get its ID. Then, it asks pod.link for an episode ID, after which it constructs the universal episode link and copies it to your clipboard.</p> <p>Episode links look like this: https://pod.link/1138055739/episode/1732808e781cc64a30d7feba0467b63a.</p> <p>They can be used to share the episode with others, no matter what podcast app they use.</p>"},{"location":"import_export/","title":"Import & Export","text":"<p>In the settings panel, you will find functionality to import and export podcasts. This feature lets you import your saved podcasts from other apps, e.g. Pocket Casts. Similarly, you can also export your podcasts from PodNotes to such apps.</p>"},{"location":"import_export/#importing","title":"Importing","text":"<p>You can import podcasts by placing a <code>opml</code> file in your Obsidian vault. Inside settings, PodNotes will automatically try to detect these, and suggest them. Then you need only click Import to add them to your saved feeds.</p>"},{"location":"import_export/#exporting","title":"Exporting","text":"<p>You can export your saved feeds to <code>opml</code> format. First designate a file path to save to (or use the default), and click Export.</p>"},{"location":"local_files/","title":"Local files","text":"<p>PodNotes supports local files. You can right-click any audio file and click <code>Play with PodNotes</code>.</p> <p>In the podcast grid, you will see a playlist with a folder icon. This is a playlist consisting of all local files (non-downloaded episodes) you have played with PodNotes.</p> <p>PodNotes will attempt to treat all local files as podcast episodes. This means all standard features are available, such as timestamps, note creation, and persisting playback time. Any exceptions will be added here.</p>"},{"location":"podcasts/","title":"Podcasts","text":""},{"location":"podcasts/#adding-podcasts","title":"Adding podcasts","text":"<p>You can add podcasts by searching for them in the podcast search box in settings. This searches the iTunes podcast repository.</p> <p>It is also possible to add custom podcast feeds by pasting the feed URL in the search box. PodNotes will try to parse the feed, and if successful, will prompt you to add it to your saved feeds.</p>"},{"location":"podcasts/#playlists","title":"Playlists","text":"<p>PodNotes can create playlists, which are lists of episodes. For each playlist, you can specify a name and an icon.</p> <p>The playlists are shown in the episode grid, represented by their icons.</p> <p>By default, you will have a queue playlist and a favorites playlist.</p> <p>You can delete playlists by pressing the trash bin icon next to the playlist name. The icon will change to a checkmark, which should be pressed within a short duration to confirm the deletion.</p>"},{"location":"podcasts/#episode-list","title":"Episode list","text":"<p>The episode list is a dynamic view, which will change depending on your selection.</p> <p>If you have no podcast selected, the episode list will show the latest episodes of all your saved feeds.</p> <p>If you have a podcast selected, the episode list will show all episodes of that podcast.</p> <p>And lastly, if you select a playlist, the episode list shows all episodes in that playlist.</p>"},{"location":"podcasts/#context-menu","title":"Context menu","text":"<p>You can right-click (desktop) or long-press (mobile) on an episode in the episode list to open the context menu.</p> <p>The context menu will let you</p> <ul> <li>Play the episode</li> <li>Mark the episode as played</li> <li>Download / remove the episode</li> <li>Add / remove the episode to favorites</li> <li>Add / remove the episode to queue</li> <li>Add / remove the episode to a playlist</li> </ul>"},{"location":"podcasts/#player","title":"Player","text":"<p>The player will automatically load and play the current episode.</p> <p>Clicking on the epsiode image will toggle episode playback.</p> <p>The player also features a progress bar, which you can use to seek to a specific time in the episode. You can also press the buttons on the player to skip backwards or forwards in the episode.</p> <p>Episode playback rate can be controlled by using the playback rate slider. This is, by default, what you have set in the settings.</p>"},{"location":"templates/","title":"Templates","text":"<p>PodNotes can create notes from templates. These templates can contain certain syntax, which will be expanded to metadata about the podcast episode you are listening to.</p> <p>To use templates, you can use the <code>Create podcast note</code> Obsidian command. This requires you to have defined a template for both the file path and note text.</p>"},{"location":"templates/#file-path","title":"File path","text":"<p>This template will be used to create the file path for the note. You can use the following syntax:</p> <ul> <li><code>{{title}}</code>: The title of the podcast episode. You can add a format, e.g. <code>{{title:_}}</code> to replace spaces with underscores.</li> <li><code>{{podcast}}</code>: The name of the podcast. You can add a format, e.g. <code>{{podcast:_}}</code> to replace spaces with underscores.</li> <li><code>{{date}}</code>: The publish date of the podcast episode. Please note that this is not always available, and will be empty if it is not.<ul> <li>You can use <code>{{date:format}}</code> to specify a custom Moment.js format. E.g. <code>{{date:YYYY-MM-DD}}</code>.</li> </ul> </li> </ul> <p>Both syntax items will be formatted such that it is safe to use in a file path. This means the following characters will be removed: <code>\\ , # % &amp; / { } * &lt; &gt; $ ' \" : @ \u2023 | ?</code>.</p>"},{"location":"templates/#note-template","title":"Note template","text":"<p>This template will be used to create the note text. You can use the following syntax:</p> <ul> <li><code>{{title}}</code>: The title of the podcast episode.</li> <li><code>{{safeTitle}}</code>: The title of the podcast episode, but with all special characters removed (like <code>{{title}}</code> in file path templates).</li> <li><code>{{description}}</code>: The description of the podcast episode.<ul> <li>You can use <code>{{description:&gt; }}</code> to prepend each new line with a <code>&gt;</code> (to put the entire description in a blockquote).</li> </ul> </li> <li> <p><code>{{content}}</code>: The content of the podcast episode from <code>&lt;content:encoded&gt;</code>. Show notes will sometimes land here.</p> <ul> <li>You can use <code>{{content:&gt; }}</code> to prepend each new line with a <code>&gt;</code> (to put the entire content in a blockquote).</li> </ul> </li> <li> <p><code>{{podcast}}</code>: The name of the podcast.</p> </li> <li><code>{{url}}</code>: The URL of the podcast episode.</li> <li><code>{{date}}</code>: The publish date of the podcast episode.<ul> <li>You can use <code>{{date:format}}</code> to specify a custom Moment.js format. E.g. <code>{{date:YYYY-MM-DD}}</code>.</li> </ul> </li> <li><code>{{artwork}}</code>: The URL of the podcast artwork. If no artwork is found, an empty string will be used.</li> </ul>"},{"location":"timestamps/","title":"Timestamps","text":"<p>Timestamps can be created with the <code>Capture Timestamp</code> Obsidian command.</p> <p>This will make PodNotes capture the current playback time to the active note, in the format given in the plugin settings.</p>"},{"location":"timestamps/#settings","title":"Settings","text":"<p>For timestamps, you can use the following format strings:</p> <ul> <li><code>{{time}}</code>: The current playback time. Default format is <code>HH:mm:ss</code>.</li> <li><code>{{linktime}}</code>: The current playback time, formatted as a link to the current episode. Default format is <code>HH:mm:ss</code>.</li> </ul> <p>Both of these allow for custom formatting. By using <code>{{time:format}}</code> or <code>{{linktime:format}}</code>, you can specify a custom Moment.js format.</p> <p>For example, you might use <code>{{time:H\\h mm\\m ss\\s}}</code> to get the time in the format <code>0h 20m 37s</code>.</p>"},{"location":"timestamps/#capturing-timestamps","title":"Capturing timestamps","text":"<p>You can use the <code>Capture Timestamp</code> command by using the <code>PodNotes: Capture Timestamp</code> command in the command palette.</p> <p>On desktop, it is possible to bind this command to a hotkey, which makes it faster to use while writing. You can bind hotkeys in the <code>Hotkeys</code> tab of the Obsidian settings.</p> <p>On mobile, you can bind the <code>Capture Timestamp</code> command to a button in the editor toolbar. That is the toolbar which appears when you are editing text on mobile devices.</p> <p>You can set this up by going to the <code>Mobile</code> tab of the Obsidian settings. When there, you can add the <code>PodNotes: Capture Timestamp</code> command to the editor toolbar. If it hasn't already been added as an option, it is either under <code>More toolbar options</code>, or you can add it manully by entering <code>PodNotes: Capture Timestamp</code> in the <code>Add global command</code> field.</p> <p>You can change the order of the buttons in the editor toolbar by dragging them up and down. The further up they are, the more to the left they will be.</p>"}]}